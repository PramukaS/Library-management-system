/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library.management.system;
import java.awt.event.MouseEvent;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/**
 *
 * @author Medani Gunathilaka
 */
public class AdminStudent extends javax.swing.JFrame {

    /**
     * Creates new form AdminStudent
     */
    public AdminStudent() {
        initComponents();
        tableDisplay();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        sidePannel = new javax.swing.JPanel();
        sideTitle = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        regNo = new javax.swing.JLabel();
        mobileNo = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        email = new javax.swing.JLabel();
        inName = new javax.swing.JTextField();
        inRegNo = new javax.swing.JTextField();
        inMobileNo = new javax.swing.JTextField();
        inAddress = new javax.swing.JTextField();
        inEmail = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        tablePannel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sidePannel.setBackground(new java.awt.Color(80, 213, 183));
        sidePannel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sideTitle.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        sideTitle.setForeground(new java.awt.Color(255, 255, 255));
        sideTitle.setText("Student Management");
        sidePannel.add(sideTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 32, 245, -1));

        name.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        name.setForeground(new java.awt.Color(255, 255, 255));
        name.setText("Name");
        sidePannel.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 108, -1, -1));

        regNo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        regNo.setForeground(new java.awt.Color(255, 255, 255));
        regNo.setText("Reg No");
        sidePannel.add(regNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 163, -1, -1));

        mobileNo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        mobileNo.setForeground(new java.awt.Color(255, 255, 255));
        mobileNo.setText("Mobile No");
        sidePannel.add(mobileNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 216, -1, -1));

        address.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        address.setForeground(new java.awt.Color(255, 255, 255));
        address.setText("Address");
        sidePannel.add(address, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 270, -1, -1));

        email.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        email.setForeground(new java.awt.Color(255, 255, 255));
        email.setText("Email");
        sidePannel.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 330, -1, -1));
        sidePannel.add(inName, new org.netbeans.lib.awtextra.AbsoluteConstraints(74, 99, 221, 32));

        inRegNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inRegNoActionPerformed(evt);
            }
        });
        sidePannel.add(inRegNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(74, 155, 221, 31));
        sidePannel.add(inMobileNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 208, 223, 31));
        sidePannel.add(inAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 262, 223, 31));

        inEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inEmailActionPerformed(evt);
            }
        });
        sidePannel.add(inEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 322, 223, 31));

        addButton.setBackground(new java.awt.Color(255, 255, 255));
        addButton.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        addButton.setText("Add");
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addButtonMouseClicked(evt);
            }
        });
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        sidePannel.add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, 63, 31));

        updateButton.setBackground(new java.awt.Color(255, 255, 255));
        updateButton.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        sidePannel.add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 410, -1, 31));

        deleteButton.setBackground(new java.awt.Color(255, 255, 255));
        deleteButton.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        sidePannel.add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 410, -1, 31));

        background.add(sidePannel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, 740));

        tablePannel.setBackground(new java.awt.Color(6, 125, 104));
        tablePannel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        studentTable.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "RegNo", "MobileNo", "Address", "Email"
            }
        ));
        studentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(studentTable);

        tablePannel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 744, 466));

        jButton1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        tablePannel.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 20, -1, -1));

        background.add(tablePannel, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 0, 900, 740));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void studentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentTableMouseClicked
        // TODO add your handling code here:
        int record=studentTable.getSelectedRow();
        TableModel model=studentTable.getModel();
        inName.setText(model.getValueAt(record, 1).toString());
        inRegNo.setText(model.getValueAt(record, 2).toString());
        inMobileNo.setText(model.getValueAt(record, 3).toString());
        inAddress.setText(model.getValueAt(record, 4).toString());
        inEmail.setText(model.getValueAt(record, 5).toString());
        id=(int)model.getValueAt(record, 0);

    }//GEN-LAST:event_studentTableMouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        if(id==0)
        JOptionPane.showMessageDialog(null,"Please select a record!");
        else{
            try {
                Connection con = dbConnect();
                String query = "DELETE FROM students WHERE id=?";
                PreparedStatement stmt = con.prepareStatement(query);
                stmt.setString(1, Integer.toString(id));
                stmt.execute();
                refreshTable();
                clearFields();

                JOptionPane.showMessageDialog(null, "Record Deleted");

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:

        if(id==0)
        JOptionPane.showMessageDialog(null,"Please select a record!");
        else{
            try {
                Connection con = dbConnect();
                String value0 = Integer.toString(id);
                String value1 = inName.getText();
                String value2 = inRegNo.getText();
                String value3 = inMobileNo.getText();
                String value4 = inAddress.getText();
                String value5 = inEmail.getText();

                String query = "UPDATE students SET name= '"+value1+"',regno= '"+value2+"',mobile= '"+value3+"',address= '"+value4+"',email= '"+value5+"' WHERE id='"+value0+"' ";
                PreparedStatement stmt= con.prepareStatement(query);
                stmt.execute();
                refreshTable();
                JOptionPane.showMessageDialog(null, "Record updated Sucessfully!");
                clearFields();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        if(inName.getText().equals("") || inRegNo.getText().equals("") || inMobileNo.getText().equals("") || inAddress.getText().equals("") || inEmail.getText().equals(""))
        JOptionPane.showMessageDialog(null,"Please Fill all the fields!");
        else{
            try{
                Connection conn=dbConnect();
                String insert="INSERT INTO students (name,regno,mobile,address,email) VALUES (?,?,?,?,?)";
                PreparedStatement stmt=conn.prepareStatement(insert);
                stmt.setString(1,inName.getText());
                stmt.setInt(2,Integer.parseInt(inRegNo.getText()));
                stmt.setString(3,inMobileNo.getText());
                stmt.setString(4,inAddress.getText());
                stmt.setString(5,inEmail.getText());
                stmt.executeUpdate();
                refreshTable();
                JOptionPane.showMessageDialog(null,"Data Inserted Sucessfully");
                clearFields();

            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void addButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_addButtonMouseClicked

    private void inEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inEmailActionPerformed

    private void inRegNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inRegNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inRegNoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        AdminPanel ob = new AdminPanel();
        ob.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
        public static Connection dbConnect(){
        String db_host = "jdbc:mysql://localhost:3306/Library_Management?serverTimezone=UTC";
        String db_username = "root";
        String db_password = "";
        Connection con = null;
        
        try{
            Class.forName("java.sql.Driver");
            con = DriverManager.getConnection(db_host, db_username, db_password);
//            JOptionPane.showMessageDialog(null,"Database Connected Sucessfully");
            return con;
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
            return null;
        }
    }
    public ArrayList<Student> getStudentList(){
        ArrayList<Student> studentList=new ArrayList<Student>();
        Connection con;
        Statement stmt;
        ResultSet result;
        Student student;
        try{
            con=dbConnect();
            String data="SELECT * FROM students";
            stmt=con.createStatement();
            result=stmt.executeQuery(data);
            
            while(result.next()){
                student = new Student(result.getInt("id"),result.getString("name"),result.getInt("regno"),result.getString("mobile"),result.getString("address"),result.getString("email"));
                studentList.add(student);
            }
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        return studentList;
         
    }
    
    public void tableDisplay(){
        ArrayList<Student> studentList=getStudentList();
        DefaultTableModel model=(DefaultTableModel) studentTable.getModel();
        Object[] record=new Object[6];
        for(int i=0;i<studentList.size();i++){
            record[0]=studentList.get(i).getId();
            record[1]=studentList.get(i).getName();
            record[2]=studentList.get(i).getRegNo();
            record[3]=studentList.get(i).getMobileNo();
            record[4]=studentList.get(i).getAddress();
            record[5]=studentList.get(i).getEmail();
            
            model.addRow(record);
        }
    }
    
        public void refreshTable(){
        DefaultTableModel model=(DefaultTableModel) studentTable.getModel();
        model.setRowCount(0);
        tableDisplay();
    }
    public void clearFields(){
        inName.setText("");
        inRegNo.setText("");
        inMobileNo.setText("");
        inAddress.setText("");
        inEmail.setText("");
    }
            
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminStudent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel address;
    private javax.swing.JPanel background;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel email;
    private javax.swing.JTextField inAddress;
    private javax.swing.JTextField inEmail;
    private javax.swing.JTextField inMobileNo;
    private javax.swing.JTextField inName;
    private javax.swing.JTextField inRegNo;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mobileNo;
    private javax.swing.JLabel name;
    private javax.swing.JLabel regNo;
    private javax.swing.JPanel sidePannel;
    private javax.swing.JLabel sideTitle;
    private javax.swing.JTable studentTable;
    private javax.swing.JPanel tablePannel;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
    private int id;
}
